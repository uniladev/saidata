{
    "openapi": "3.0.0",
    "info": {
        "title": "SAIDATA API Documentation",
        "description": "API Documentation untuk Sistem Informasi Akademik FMIPA",
        "contact": {
            "name": "FMIPA Unila",
            "email": "admin@fmipa.unila.ac.id"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login via SSO",
                "description": "Authenticate user with campus SSO credentials and receive JWT tokens",
                "operationId": "login",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "NPM from SSO",
                                        "type": "string",
                                        "example": "2267051001"
                                    },
                                    "password": {
                                        "description": "User password (min 6 characters)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "headers": {
                            "Set-Cookie": {
                                "description": "HTTP-only refresh token cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "refresh_token=abc123...; HttpOnly; Secure; SameSite=Strict"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGc..."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "68ee2e761fa10bc4f109c732"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Dafahan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "dafahan@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Username atau password salah"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "username": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The username field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password must be at least 6 characters."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login failed: Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "description": "Get authenticated user information",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "68ee2e761fa10bc4f109c732"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Dafahan"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "dafahan@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token invalid or expired"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Invalidate JWT token and clear refresh token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Clears the refresh token cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "refresh_token=deleted; expires=Thu, 01-Jan-1970 00:00:01 GMT"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Logout failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to logout"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "description": "Get a new access token using refresh token from cookie (token rotation enabled)",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "headers": {
                            "Set-Cookie": {
                                "description": "New HTTP-only refresh token cookie (token rotation)",
                                "schema": {
                                    "type": "string",
                                    "example": "refresh_token=xyz789...; HttpOnly; Secure; SameSite=Strict"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGc..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Clears the invalid refresh token cookie",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/forms": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "Get all forms",
                "description": "Retrieve all forms",
                "operationId": "bcad6aeac6086ec1d97b7245504ebcc3",
                "responses": {
                    "200": {
                        "description": "List of forms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Form"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Forms"
                ],
                "summary": "Create new form",
                "description": "Create a new form with fields structure. Backend will generate MongoDB ObjectId and field IDs automatically.",
                "operationId": "9c6257241b15498a5c9fbb8e36879f40",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "form"
                                ],
                                "properties": {
                                    "form": {
                                        "required": [
                                            "title",
                                            "fields"
                                        ],
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "example": "Untitled Form"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Form description"
                                            },
                                            "submitText": {
                                                "description": "Submit button text",
                                                "type": "string",
                                                "example": "Submit"
                                            },
                                            "successMessage": {
                                                "description": "Success message after submission",
                                                "type": "string",
                                                "example": "Thank you for your submission!"
                                            },
                                            "fields": {
                                                "type": "array",
                                                "items": {
                                                    "required": [
                                                        "type",
                                                        "label",
                                                        "name"
                                                    ],
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "text",
                                                                "textarea",
                                                                "number",
                                                                "email",
                                                                "date",
                                                                "time",
                                                                "datetime-local",
                                                                "url",
                                                                "tel",
                                                                "password",
                                                                "select",
                                                                "radio",
                                                                "checkbox",
                                                                "file",
                                                                "rating",
                                                                "signature",
                                                                "matrix",
                                                                "repeater"
                                                            ],
                                                            "example": "text"
                                                        },
                                                        "label": {
                                                            "type": "string",
                                                            "example": "New Text Input"
                                                        },
                                                        "name": {
                                                            "description": "Field name for form data",
                                                            "type": "string",
                                                            "example": "field_1"
                                                        },
                                                        "required": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "placeholder": {
                                                            "type": "string",
                                                            "example": "Enter text here"
                                                        },
                                                        "helpText": {
                                                            "type": "string",
                                                            "example": "Help text for the field"
                                                        },
                                                        "validation": {
                                                            "description": "Validation rules object",
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "options": {
                                                            "description": "Options for select, radio, checkbox fields",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "fileOptions": {
                                                            "description": "File upload options",
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "min": {
                                                            "description": "Minimum value for number fields",
                                                            "type": "number",
                                                            "example": 0,
                                                            "nullable": true
                                                        },
                                                        "max": {
                                                            "description": "Maximum value for number fields",
                                                            "type": "number",
                                                            "example": 100,
                                                            "nullable": true
                                                        },
                                                        "step": {
                                                            "description": "Step value for number fields",
                                                            "type": "number",
                                                            "nullable": true
                                                        },
                                                        "rows": {
                                                            "description": "Rows for textarea",
                                                            "type": "integer",
                                                            "nullable": true
                                                        },
                                                        "maxRating": {
                                                            "description": "Maximum rating value",
                                                            "type": "integer",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Form created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Form"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/forms/{id}": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "Get form by ID",
                "description": "Retrieve a specific form by MongoDB ObjectId",
                "operationId": "5f0cd5c61e672872fc3de42d9bd86a9d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MongoDB ObjectId (24 character hex string)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{24}$",
                            "example": "671292eb4c6b7a0d4e0b1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Form"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Forms"
                ],
                "summary": "Update form",
                "description": "Update an existing form. Backend will preserve existing field IDs and generate new IDs for new fields.",
                "operationId": "cd7f11d5218d6865724c77f1ea25d841",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MongoDB ObjectId (24 character hex string)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{24}$",
                            "example": "671292eb4c6b7a0d4e0b1234"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "form"
                                ],
                                "properties": {
                                    "form": {
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "example": "Updated Form Title"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Updated description"
                                            },
                                            "submitText": {
                                                "type": "string",
                                                "example": "Submit"
                                            },
                                            "successMessage": {
                                                "type": "string",
                                                "example": "Thank you!"
                                            },
                                            "fields": {
                                                "description": "Fields array. Include 'id' for existing fields to preserve them, omit 'id' for new fields.",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Include this for existing fields",
                                                            "type": "string",
                                                            "example": "field_1760690243313_bhm124rg1"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "text"
                                                        },
                                                        "label": {
                                                            "type": "string",
                                                            "example": "Updated Label"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "field_1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Form updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Form"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forms"
                ],
                "summary": "Delete form",
                "description": "Delete a form permanently",
                "operationId": "01f1be53256aaaaa8a2db6c2e9876bf8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MongoDB ObjectId (24 character hex string)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{24}$",
                            "example": "671292eb4c6b7a0d4e0b1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/survey": {
            "post": {
                "tags": [
                    "Form Submissions"
                ],
                "summary": "Submit survey response",
                "description": "Submit a response to a survey form",
                "operationId": "b6957a616d66e3d73ab529ed5edcdd8c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "form_id",
                                    "version_id",
                                    "submitted_by"
                                ],
                                "properties": {
                                    "form_id": {
                                        "type": "string",
                                        "example": "68ee4fc2754f6e95b809e492"
                                    },
                                    "version_id": {
                                        "type": "string",
                                        "example": "68ee4fc2754f6e95b809e493"
                                    },
                                    "submitted_by": {
                                        "type": "string",
                                        "example": "68ee3e2c5336195833053652"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "completed",
                                            "draft"
                                        ],
                                        "example": "completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Survey submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Survey submitted successfully"
                                        },
                                        "submission": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/submissions/{submissionId}/payload": {
            "get": {
                "tags": [
                    "Form Submission Payloads"
                ],
                "summary": "Get submission payload by submission ID",
                "description": "Retrieve payload data for a specific submission",
                "operationId": "27484e7cf3539113e224675d502305df",
                "parameters": [
                    {
                        "name": "submissionId",
                        "in": "path",
                        "description": "MongoDB ObjectId of the submission",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{24}$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submission payload details"
                    },
                    "404": {
                        "description": "Payload not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payloads/{id}": {
            "get": {
                "tags": [
                    "Form Submission Payloads"
                ],
                "summary": "Get payload by ID",
                "description": "Retrieve a specific payload by its ID",
                "operationId": "9703347d049b0ec4130e3ce4cad7e3b4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MongoDB ObjectId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{24}$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payload details"
                    },
                    "404": {
                        "description": "Payload not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{userId}/profile": {
            "get": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Get user profile by user ID",
                "description": "Retrieve profile for a specific user",
                "operationId": "04f204f71059d8bf7281ef291fc8d491",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "MongoDB ObjectId of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{24}$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile details"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-profiles": {
            "post": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Create user profile",
                "description": "Create a new user profile",
                "operationId": "383a38ef7f8b7f3036b3ea8bab2c4442",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "68ee3e2c5336195833053652"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Profile created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-profiles/{id}": {
            "put": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Update user profile",
                "description": "Update an existing user profile",
                "operationId": "5ff67a911a207ce9cf5394b96de05bd8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MongoDB ObjectId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{24}$"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Delete user profile",
                "description": "Delete a user profile",
                "operationId": "a26281abf789fc8640faa39b66bd0ade",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MongoDB ObjectId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{24}$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile deleted successfully"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Form": {
                "properties": {
                    "_id": {
                        "description": "MongoDB ObjectId",
                        "type": "string",
                        "example": "671292eb4c6b7a0d4e0b1234"
                    },
                    "title": {
                        "type": "string",
                        "example": "Untitled Form"
                    },
                    "description": {
                        "type": "string",
                        "example": "Form description"
                    },
                    "submitText": {
                        "type": "string",
                        "example": "Submit"
                    },
                    "successMessage": {
                        "type": "string",
                        "example": "Thank you for your submission!"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "Backend-generated unique field identifier",
                                    "type": "string",
                                    "example": "field_1760690243313_bhm124rg1"
                                },
                                "type": {
                                    "type": "string",
                                    "example": "text"
                                },
                                "label": {
                                    "type": "string",
                                    "example": "New Text Input"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "field_1"
                                },
                                "required": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "placeholder": {
                                    "type": "string",
                                    "example": ""
                                },
                                "helpText": {
                                    "type": "string",
                                    "example": ""
                                },
                                "validation": {
                                    "type": "object",
                                    "nullable": true
                                },
                                "options": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "fileOptions": {
                                    "type": "object",
                                    "nullable": true
                                },
                                "min": {
                                    "type": "number",
                                    "nullable": true
                                },
                                "max": {
                                    "type": "number",
                                    "nullable": true
                                },
                                "step": {
                                    "type": "number",
                                    "nullable": true
                                },
                                "rows": {
                                    "type": "integer",
                                    "nullable": true
                                },
                                "maxRating": {
                                    "type": "integer",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_by": {
                        "type": "string",
                        "example": "68ee3e2c533619c833053652"
                    },
                    "updated_by": {
                        "type": "string",
                        "example": "68ee3e2c533619c833053652"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT token in format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Forms",
            "description": "Forms"
        },
        {
            "name": "Form Submissions",
            "description": "Form Submissions"
        },
        {
            "name": "Form Submission Payloads",
            "description": "Form Submission Payloads"
        },
        {
            "name": "User Profiles",
            "description": "User Profiles"
        }
    ]
}